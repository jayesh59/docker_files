# This Dockerfile demonstrates the "Install from Source" option for using procgen
# need to run this command in dev env terminal = pip install mpi4py
#command to build this docker file. |||| docker build . --tag procgen --file docker/Dockerfile.dev
FROM ubuntu:bionic-20191202
ARG DEBIAN_FRONTEND=noninteractive
ENV QT_X11_NO_MITSHM=1
ENV LC_ALL="en_US.UTF-8"
ENV PATH=/root/miniconda/envs/dev/bin:/root/miniconda/bin:$PATH
ENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python

RUN apt-get update && apt-get install --yes --no-install-recommends ca-certificates curl build-essential mesa-common-dev libglu1-mesa-dev
RUN curl -o /tmp/miniconda-installer.sh https://repo.anaconda.com/miniconda/Miniconda3-4.7.12.1-Linux-x86_64.sh
RUN bash /tmp/miniconda-installer.sh -b -p ~/miniconda
ADD environment.yml .
RUN ~/miniconda/bin/conda env update --name dev --file environment.yml

ADD . /procgen
RUN pip install -e /procgen
RUN python -c "from procgen import ProcgenGym3Env; ProcgenGym3Env(num=1, env_name='coinrun')"
RUN apt-get install -y xauth
RUN apt-get install -y xorg openbox
#RUN pip install gym
RUN pip install opencv-python
RUN apt-get update && apt-get install -y cmake libopenmpi-dev python3-dev zlib1g-dev
RUN pip install tensorflow==1.14
RUN apt-get install -y git-all
#RUN conda env update --name train-procgen --file train-procgen/environment.yml
RUN mkdir -p ~/git; cd ~/git && \
    git clone https://github.com/openai/train-procgen.git && \ 
    git clone https://github.com/openai/baselines.git && \
    pip install -e baselines && \
#    cd ~/git && \
    pip install -e train-procgen


